{"version":3,"sources":["components/Nav/Header/Header.tsx","components/Nav/Footer/Footer.tsx","components/Authentication/Login/Login.tsx","components/CustomHooks.tsx","components/Contact/Contact.tsx","components/Home/Home.tsx","components/Authentication/Registration/Registration.tsx","components/Authentication/ForgotPassword/ForgotPassword.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","HeaderProps","className","to","id","React","Component","Footer","href","Date","getFullYear","Login","LoginProps","type","htmlFor","name","useCustomFormHook","initialValues","callback","useState","inputs","setInputs","handleSubmit","event","preventDefault","handleInputChange","persist","target","value","Contact","Name","EmailAddress","Subject","Message","alert","onSubmit","autoComplete","src","alt","required","onChange","Home","props","Registration","RegistrationProps","ForgotPassword","ForgotPasswordProps","App","basename","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc46cc95.chunk.js","sourcesContent":["import React, { } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\nimport Login from '../../Authentication/Login/Login';\nimport Contact from '../../Contact/Contact';\nimport Home from '../../Home/Home';\nimport Registration from '../../Authentication/Registration/Registration';\nimport ForgotPassword from '../../Authentication/ForgotPassword/ForgotPassword';\n\nclass Header extends React.Component<HeaderProps, HeaderState>{\n  constructor(HeaderProps: Readonly<HeaderProps>) {\n    super(HeaderProps);\n  }\n\n  render() {\n    return (\n\n      <nav>\n        <div className=\"nav-wrapper white\">\n          <Link to={'/'} className=\"brand-logo\">Logo</Link>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li><Link to={'/contact'} className=\"nav-link\">Contact</Link></li>\n            <li><Link to={'/login'} className=\"nav-link\">Login</Link> </li>\n          </ul>\n        </div>\n      </nav>\n\n    );\n  }\n}\n\ninterface HeaderProps {\n\n}\n\ninterface HeaderState {\n\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"page-footer\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col l6 s12\">\n                            <h5 className=\"white-text\">Footer Content</h5>\n                            <p className=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\n                        </div>\n                        <div className=\"col l4 offset-l2 s12\">\n                            <h5 className=\"white-text\">Links</h5>\n                            <ul>\n                                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n                                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n                                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n                                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer-copyright\">\n                    <div className=\"container\">\n                        Â© {(new Date().getFullYear())} Katavuccol\n              <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n                    </div>\n                </div>\n            </footer>\n        );\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, NavLink } from 'react-router-dom';\nimport Registration from '../Registration/Registration';\nimport ForgotPassword from '../ForgotPassword/ForgotPassword';\n\nclass Login extends React.Component<LoginProps, LoginState> {\n    constructor(LoginProps: Readonly<LoginProps>) {\n        super(LoginProps);\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"card-panel col s9 offset-s3 m9 offset-m1\">\n                    <form className=\"col s12\">\n                        <div className=\"row k-row\">\n                            <div className=\"input-field col s6\">\n                                <input id=\"username\" type=\"text\" className=\"validate\" />\n                                <label htmlFor=\"username\">User Name</label>\n                            </div>\n                            <div className=\"input-field col s6\">\n                                <input id=\"password\" type=\"password\" className=\"validate\" />\n                                <label htmlFor=\"password\">Password</label>\n                            </div>\n                        </div>\n                        <div className=\"row k-row\">\n                            <div className=\"col s6\">\n                                <div className=\"switch\">\n                                    <label>\n                                        Off\n                                            <input type=\"checkbox\"></input>\n                                        <span className=\"lever\"></span>\n                                        On\n                                        </label>\n                                </div>\n                            </div>\n                            <div className=\"col s6\">\n                                <Link to={'/forgotpassword'} className=\"nav-link right\">Forgot Password</Link>\n                            </div>\n                        </div>\n                        <div className=\"row k-row\">\n                            <div className=\"input-field col s12\">\n                                <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit\n                                            <i className=\"material-icons right\">send</i>\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"divider\"></div>\n                        <div className=\"row k-row\">\n                            <div className=\"input-field col s12 center\">\n                                <span> Or </span>\n                                <Link to={'/registration'} className=\"nav-link\">Sign up </Link>\n                                <span> with</span>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\ninterface LoginProps {\n\n}\n\ninterface LoginState {\n\n}\n\nexport default Login;","import { useState } from 'react';\n\nconst useCustomFormHook = (initialValues: any, callback: any) => {\n    const [inputs, setInputs] = useState(initialValues);\n    const handleSubmit = (event: any) => {\n        if (event) event.preventDefault();\n        callback();\n    }\n    const handleInputChange = (event: any) => {\n        event.persist();\n        setInputs((inputs: any) => ({ ...inputs, [event.target.name]: event.target.value }));\n    }\n    return {\n        handleSubmit,\n        handleInputChange,\n        inputs\n    };\n}\nexport default useCustomFormHook;","import React, { useState } from 'react';\nimport './Contact.scss';\nimport useCustomFormHook from '../CustomHooks';\n\nconst Contact = () => {\n    const submitContact = () => {\n        alert('User Created! Name: ${inputs.Name}  Email: ${inputs.EmailAddress}');\n    };\n    const { inputs, handleInputChange, handleSubmit } = useCustomFormHook({\n        Name: '',\n        EmailAddress: '',\n        Subject: '',\n        Message: ''\n    }, submitContact);\n\n    return (\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n            <div className=\"row card-panel\">\n                <div className=\"col s6\">\n                    <div className=\"row email\">\n                        <img src=\"/images/email.png\" alt=\"email\"></img>\n                    </div>\n                </div>\n                <div className=\"col s6\">\n                    <div className=\"row center\">\n                        <h4> Get in touch </h4>\n                    </div>\n                    <div className=\"row k-row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"Name\" type=\"text\" className=\"validate\" required onChange={handleInputChange} value={inputs.Name} />\n                            <label htmlFor=\"Name\">Name</label>\n                        </div>\n                    </div>\n                    <div className=\"row k-row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"EmailAddress\" type=\"email\" className=\"validate\" required onChange={handleInputChange} value={inputs.EmailAddress} />\n                            <label htmlFor=\"EmailAddress\">Email</label>\n                        </div>\n                    </div>\n                    <div className=\"row k-row\">\n                        <div className=\"input-field col s12\">\n                            <input id=\"Subject\" type=\"text\" className=\"validate\" required onChange={handleInputChange} value={inputs.Subject} />\n                            <label htmlFor=\"Subject\">Subject</label>\n                        </div>\n                    </div>\n                    <div className=\"row k-row\">\n                        <div className=\"input-field col s12\">\n                            <textarea id=\"Message\" className=\"materialize-textarea\" required onChange={handleInputChange} value={inputs.Message} />\n                            <label htmlFor=\"Message\">Message</label>\n                        </div>\n                    </div>\n                    <div className=\"row k-row\">\n                        <div className=\"input-field col s12 center\">\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Submit\n                                 <i className=\"material-icons right\">send</i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default Contact;\n","import React from 'react';\n\nclass Home extends React.Component<HomeProps, HomeState> {\n    constructor(props: Readonly<HomeProps>) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                Home\n            </div>\n        );\n    }\n}\n\ninterface HomeProps {\n\n}\n\ninterface HomeState {\n\n}\n\nexport default Home;","import React from 'react';\n\nclass Registration extends React.Component<RegistrationProps, RegistrationState> {\n    constructor(RegistrationProps: Readonly<RegistrationProps>) {\n        super(RegistrationProps);\n    }\n    render() {\n        return (\n            <div>\n                Registration\n            </div>\n        );\n    }\n}\n\ninterface RegistrationProps {\n\n}\n\ninterface RegistrationState {\n\n}\nexport default Registration;","import React from 'react';\n\nclass ForgotPassword extends React.Component<ForgotPasswordProps, ForgotPasswordState> {\n    constructor(ForgotPasswordProps: Readonly<ForgotPasswordProps>) {\n        super(ForgotPasswordProps);\n    }\n\n    render() {\n        return (\n            <div>\n                ForgotPassword\n            </div>\n        );\n    }\n}\n\ninterface ForgotPasswordProps {\n\n}\n\ninterface ForgotPasswordState {\n\n}\n\nexport default ForgotPassword;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Nav/Header/Header';\nimport Footer from './components/Nav/Footer/Footer';\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch } from 'react-router-dom';\nimport Login from './components/Authentication/Login/Login';\nimport Contact from './components/Contact/Contact';\nimport Home from './components/Home/Home';\nimport Registration from './components/Authentication/Registration/Registration';\nimport ForgotPassword from './components/Authentication/ForgotPassword/ForgotPassword';\nconst App: React.FC = () => {\n  return (\n    <Router basename=\"/\">\n      <div>\n        <Header />\n        <div className=\"container\">\n          <Route path='/login' component={Login}></Route>\n          <Route path='/contact' component={Contact}></Route>\n          <Route exact path='/' component={Home}></Route>\n          <Route path='/registration' component={Registration}></Route>\n          <Route path='/forgotpassword' component={ForgotPassword}></Route>\n        </div>\n        <Footer />\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}